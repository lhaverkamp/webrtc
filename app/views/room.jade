doctype html
html
	head
		link(rel='stylesheet' type='text/css' href='/css/rtc.css')
		script(src='/socket.io/socket.io.js')
		script(src='/js/adapter-latest.js')
		script.
			// Set RTC options.
			var rtcOpts = {
				// simple constraints for the defaults
				constraints: {
					video: true,
					audio: true
				},
				
				// specify the location of the signalling server
				signaller: 'wss://' + location.hostname + ':8443',
			    
			    // room defined by default
				room: '#{room}',
				
				// specify ice servers or a generator function to create ice servers
				ice: [],
				
				// any data channels that we want to create for the conference by default
				// a chat channel is created, but other channels can be added also
				// additional options can be supplied to customize the data channel config
				// see: <https://w3c.github.io/webrtc-pc/#idl-def-RTCDataChannelInit>
				channels: {
					chat: true
				},
				
				// the selector that will be used to identify the local video container
				localContainer: '.video-container',
				
				// the selector that will be used to identify the remote video container
				remoteContainer: '.video-container',
				
				// options overrides
				options: {
				}
			};
		link(rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css')
	body
		div(class='room-container')
			div(class='video-container')
			div(class='chat-container')
				div(class='message-container' contenteditable=true)
				div(class='chat-controls')
					input(class='chat-message' type='text' placeholder='input text here')
					button(class='button send-button' data-action='message') Send
		script(src='/js/rtc.js')